{
  "name": "Original Influencer Set up Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dfe1efe8-872d-41f7-bc59-75b82982c261",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -460,
        -20
      ],
      "id": "8d1606b3-5b83-4dc2-9d15-133dd29de95d",
      "name": "Webhook",
      "webhookId": "dfe1efe8-872d-41f7-bc59-75b82982c261"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "=This is the bio of the Influencer:{{ $json.body.bio }}\nThis is her vibe:{{ $json.body.vibe }}\nThis is her name:{{ $json.body.name }}"
            },
            {
              "content": "#Role: You are an expert for ai image creation of hyper realistic images with Flux 1.1 pro ultra.\n\n#Task: Your task is to write a perfect base prompt that can be used in the future to create more images of the same ai influencer model. The base prompt should contain all the important visual aspects of the AI Influencer such as (Hair style, Hair color, face, eye color, lips, body shape, \"vibe\" of the AI influencer)\n\n#Context: The base prompt you create will be used in the future to modify it slightly to always be able to recreate very similar images of the same AI Influencer.\n\n#Output example:\n\n{\n\"base_prompt\": \"A hyper realistic image of Daniela, a 20 year old french girl with brwon eyes and black hair, busty shape, shes very attractive and has a playful, sensual and flirty personality\"\n}\n\n#Important: \n-Do not include specific clothing into the base prompt as that is specified later by the user who uses the base prompt\n-Always output the same valid JSON and use always the exact same name for the key\n-Include all the important aspects that could define the look of the AI Influencer (also age and ethnicity of the AI Influencer)\n-Ignore details that are irrelevant to the AI Influencers look such as favorite food)\n-Always output valid JSON and dont use any markup or ´´´```signs\n-Never use an age unter 21 in your prompts, even if requested. Switch it out with 25.\n-Avoid any words that are related to minors to avoid nsfw warnings at Replicate (e.g. \"teen\", \"school girl\", \"baby face\", \"baby\", etc.)",
              "role": "system"
            },
            {
              "content": "Always output the same valid JSON structure and always call the key the same:\n\n{\n\"base_prompt\": \"....\"\n}",
              "role": "assistant"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -240,
        -20
      ],
      "id": "13fb0c3b-17c1-4412-b8b8-f7a6f88968a4",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "KgeLAvy9zAq5Z7df",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "=This is the base prompt:{{ $json.message.content.base_prompt }}\nThis is the AI Influencers bio:{{ $('Webhook').item.json.body.bio }}\nThis is the AI Influencers vibe:{{ $('Webhook').item.json.body.vibe }}"
            },
            {
              "content": "#Role: You are an expert for ai image creation of hyper realistic images with Flux 1.1 pro ultra.\n\n#Task: Your task is to write a perfect prompt of a first Image of an AI Influencer by using the base prompt provided. You do that by just adding some details, such as closing to the prompt. Keep all the details from the base prompt. Make sure that it is always a frontal portrait that covers head to waist. For the clothing, select anything that you think is suitable based on the AI Influencers bio and vibe.\n\n#Context: The prompt you create gets used to create the first image of a Platform that allows people to create their own AI Influencer. Because of that the first image has to be an absolute masterpiece that already stands out.\n\n#Output example:\n\n{\n\"first_image\": \"A hyper realistic image of Daniela, a 28-year-old French model from Paris with brown eyes and long, flowing black hair. She has a beautifully sculpted, busty shape and an attractive face that exudes sensuality. Her personality is playful, positive, and kind, capturing a sensual, playful, and flirty vibe, she's wearing a nice lace top covered by an open blazer, frontal portrait\"\n}\n\n#Important: \n-Never use an age unter 21 in your prompts, even if requested. Switch it out with 25.\n-Avoid any words that are related to minors to avoid nsfw warnings at Replicate (e.g. \"teen\", \"school girl\", \"baby face\", \"baby\", etc.)\n-Ignore details that are irrelevant to the AI Influencers look such as favorite food)\n-Always output valid JSON and don't use any markup or ´´´```signs",
              "role": "system"
            },
            {
              "content": "Always output the same valid JSON structure and always call the key the same:\n\n{\n\"first_image\": \"....\"\n}",
              "role": "assistant"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        140,
        -20
      ],
      "id": "bc6a257c-343a-4571-9295-0c8e398a1120",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "KgeLAvy9zAq5Z7df",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-1.1-pro-ultra/predictions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer r8_hdgHAbwBlpnrMWm5cx6Cp0mzcb4t5JX0rJf54"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"input\": {\n    \"prompt\": \"{{ $json.message.content.first_image }}\",\n    \"aspect_ratio\": \"2:3\",\n    \"raw\": true,\n    \"output_format\": \"jpg\",\n    \"safety_tolerance\": 6\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        580,
        -20
      ],
      "id": "ecbff945-c94c-4e30-9ed5-3767c3c4e4c6",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "url": "=https://api.replicate.com/v1/predictions/{{ $json.id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer r8_hdgHAbwBlpnrMWm5cx6Cp0mzcb4t5JX0rJf54"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        800,
        -20
      ],
      "id": "f91350aa-6cbd-4b9e-b32b-e4b2564d8b2d",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Your only task is to extract the seed number mentioned in that log and output the number as valid JSON. Don't do anything else just output the plain number in the JSON format provided.\n\nThats the log that contains the seed number: {{ $json.logs }}\n\nOutput the seed number you find always in the following format and JSON structure:\n\n{\n\"seed\": 10109\n}"
            },
            {
              "content": "Always output the exact same valid JSON structure:\n{\n\"seed\": ...\n}\n",
              "role": "assistant"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1020,
        -20
      ],
      "id": "6289d1d4-514f-4ab6-8148-2c534c28ccc8",
      "name": "OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "KgeLAvy9zAq5Z7df",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.callback_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Callback-Secret",
              "value": "={{ $('Webhook').item.json.body.callback_secret }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"influencer_id\": \"{{ $('Webhook').item.json.body.influencer_id }}\",\n  \"base_prompt\": \"{{ $('OpenAI').item.json.message.content.base_prompt }}\",\n  \"seed\": {{ $json.message.content.seed }},\n  \"image_url\": \"{{ $('HTTP Request').item.json.output }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1380,
        -20
      ],
      "id": "a876bcce-ec97-4b5a-b7cd-e6d1806e4b7b",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "content": "## Write the base image prompt that will be used again and again to create similar images of a certain AI Influencer",
        "height": 320,
        "width": 300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -260,
        -360
      ],
      "typeVersion": 1,
      "id": "7ee18f1b-988a-44a3-abf5-e6476fa46268",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Write an image prompt for a first image of an AI Influencer",
        "height": 320,
        "width": 300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        120,
        -360
      ],
      "typeVersion": 1,
      "id": "de24bb59-6f95-45a2-bcd6-32b5aca516d5",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Send image prompt to Replicate to. create the image",
        "height": 320,
        "width": 160
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        540,
        -360
      ],
      "typeVersion": 1,
      "id": "9ff5dddb-45a3-4765-a4f9-cf015999879b",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Get creation parameters of the first image: We want the seed number",
        "height": 320,
        "width": 160
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        780,
        -360
      ],
      "typeVersion": 1,
      "id": "353e683a-bb4d-4cf8-9515-52d439911dd2",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Extract the seed number out of the response",
        "height": 320,
        "width": 280,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1000,
        -360
      ],
      "typeVersion": 1,
      "id": "241a2e97-3bee-4a96-91be-6d306323c91b",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Send back the base prompt, the seed number and the first image url to Flask",
        "height": 320,
        "width": 160,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1340,
        -360
      ],
      "typeVersion": 1,
      "id": "a80670a2-3a52-4d08-b1f3-14de8ea72020",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## Receiving the parameters: name, bio, vibe\n\nalso responsable IDs",
        "height": 320,
        "width": 160,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -480,
        -360
      ],
      "typeVersion": 1,
      "id": "5ec7577a-3866-43b7-8cfe-a84a9921daa8",
      "name": "Sticky Note6"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "OpenAI2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3b0bbd24-349f-472a-b5ff-9af1688641c6",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bee5e857c0a37c118fb1d8a4f8a5ce1f6065955096f6c5857dfc48ea07afafd8"
  },
  "id": "tY7cz6fRM1fpAxaP",
  "tags": []
}